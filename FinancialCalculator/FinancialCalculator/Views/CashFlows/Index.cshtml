@{
    ViewBag.Title = "Cash Flow Diagram";
}

<script type="text/javascript" src="~/Scripts/highcharts/js/highstock.js"></script>
<script type="text/javascript" src="~/Scripts/highcharts/js/highcharts-more.js"></script>
<script type="text/javascript" src="~/Scripts/highcharts/js/modules/exporting.js"></script>
<script type="text/javascript">
    Highcharts.theme = {
        colors: ["#DDDF0D", "#7798BF", "#55BF3B", "#DF5353", "#aaeeee", "#ff0066", "#eeaaee",
            "#55BF3B", "#DF5353", "#7798BF", "#aaeeee"],
        chart: {
            backgroundColor: {
                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                stops: [
                    [0, 'rgb(96, 96, 96)'],
                    [1, 'rgb(16, 16, 16)']
                ]
            },
            borderWidth: 0,
            borderRadius: 15,
            plotBackgroundColor: null,
            plotShadow: false,
            plotBorderWidth: 0
        },
        title: {
            style: {
                color: '#FFF',
                font: '16px Lucida Grande, Lucida Sans Unicode, Verdana, Arial, Helvetica, sans-serif'
            }
        },
        subtitle: {
            style: {
                color: '#DDD',
                font: '12px Lucida Grande, Lucida Sans Unicode, Verdana, Arial, Helvetica, sans-serif'
            }
        },
        xAxis: {
            gridLineWidth: 0,
            lineColor: '#999',
            tickColor: '#999',
            labels: {
                style: {
                    color: '#999',
                    fontWeight: 'bold'
                }
            },
            title: {
                style: {
                    color: '#AAA',
                    font: 'bold 12px Lucida Grande, Lucida Sans Unicode, Verdana, Arial, Helvetica, sans-serif'
                }
            }
        },
        yAxis: {
            plotLines: [{
                color: '#999',
                width: 1,
                value: 0
            }],
            alternateGridColor: null,
            minorTickInterval: null,
            gridLineColor: 'rgba(255, 255, 255, .1)',
            minorGridLineColor: 'rgba(255,255,255,0.07)',
            lineWidth: 0,
            tickWidth: 0,
            labels: {
                style: {
                    color: '#999',
                    fontWeight: 'bold'
                }
            },
            title: {
                style: {
                    color: '#AAA',
                    font: 'bold 12px Lucida Grande, Lucida Sans Unicode, Verdana, Arial, Helvetica, sans-serif'
                }
            }
        },
        legend: {
            itemStyle: {
                color: '#CCC'
            },
            itemHoverStyle: {
                color: '#FFF'
            },
            itemHiddenStyle: {
                color: '#333'
            }
        },
        labels: {
            style: {
                color: '#CCC'
            }
        },
        tooltip: {
            backgroundColor: {
                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                stops: [
                    [0, 'rgba(96, 96, 96, .8)'],
                    [1, 'rgba(16, 16, 16, .8)']
                ]
            },
            borderWidth: 0,
            style: {
                color: '#FFF'
            }
        },


        plotOptions: {
            series: {
                shadow: true
            },
            line: {
                dataLabels: {
                    color: '#CCC'
                },
                marker: {
                    lineColor: '#333'
                }
            },
            spline: {
                marker: {
                    lineColor: '#333'
                }
            },
            scatter: {
                marker: {
                    lineColor: '#333'
                }
            },
            candlestick: {
                lineColor: 'white'
            },
            columnrange: {
                pointWidth: 5
            }
        },

        toolbar: {
            itemStyle: {
                color: '#CCC'
            }
        },

        navigation: {
            buttonOptions: {
                symbolStroke: '#DDDDDD',
                hoverSymbolStroke: '#FFFFFF',
                theme: {
                    fill: {
                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                        stops: [
                            [0.4, '#606060'],
                            [0.6, '#333333']
                        ]
                    },
                    stroke: '#000000'
                }
            }
        },

        // scroll charts
        rangeSelector: {
            buttonTheme: {
                fill: {
                    linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                    stops: [
                        [0.4, '#888'],
                        [0.6, '#555']
                    ]
                },
                stroke: '#000000',
                style: {
                    color: '#CCC',
                    fontWeight: 'bold'
                },
                states: {
                    hover: {
                        fill: {
                            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                            stops: [
                                [0.4, '#BBB'],
                                [0.6, '#888']
                            ]
                        },
                        stroke: '#000000',
                        style: {
                            color: 'white'
                        }
                    },
                    select: {
                        fill: {
                            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                            stops: [
                                [0.1, '#000'],
                                [0.3, '#333']
                            ]
                        },
                        stroke: '#000000',
                        style: {
                            color: 'yellow'
                        }
                    }
                }
            },
            inputStyle: {
                backgroundColor: '#333',
                color: 'silver'
            },
            labelStyle: {
                color: 'silver'
            }
        },

        navigator: {
            handles: {
                backgroundColor: '#666',
                borderColor: '#AAA'
            },
            outlineColor: '#CCC',
            maskFill: 'rgba(16, 16, 16, 0.5)',
            series: {
                color: '#7798BF',
                lineColor: '#A6C7ED'
            }
        },

        scrollbar: {
            barBackgroundColor: {
                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                stops: [
					[0.4, '#888'],
					[0.6, '#555']
                ]
            },
            barBorderColor: '#CCC',
            buttonArrowColor: '#CCC',
            buttonBackgroundColor: {
                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                stops: [
					[0.4, '#888'],
					[0.6, '#555']
                ]
            },
            buttonBorderColor: '#CCC',
            rifleColor: '#FFF',
            trackBackgroundColor: {
                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                stops: [
                    [0, '#000'],
                    [1, '#333']
                ]
            },
            trackBorderColor: '#666'
        },

        // special colors for some of the demo examples
        legendBackgroundColor: 'rgba(48, 48, 48, 0.8)',
        legendBackgroundColorSolid: 'rgb(70, 70, 70)',
        dataLabelsColor: '#444',
        textColor: '#E0E0E0',
        maskColor: 'rgba(255,255,255,0.3)'
    };

    // Apply the theme
    var highchartsOptions = Highcharts.setOptions(Highcharts.theme);
</script>
<script type="text/javascript">
    var cf_index = 1;


    function validateFields() {
        CFsAreGood = true;
        $('.CF').each(function (index) {
            CFsAreGood = CFsAreGood && ($.isNumeric($(this).val()) || !($(this).val()))
        });
        if (!CFsAreGood) {
            $.Notify({
                caption: 'Error',
                content: 'Must input numbers for all Cash Flows or leave blank for 0.',
            });
        }
        return CFsAreGood;
    }

    function updateChart() {
        if (!validateFields())
            return;

        var options = {
            chart: {
                type: 'columnrange'
            },
            rangeSelector: {
                selected: 2
            },
            title: {
                text: 'Cash Flows'
            },
            series: []
        };
        var data = [];

        $('.CF').each(function (index, value) {
            var cfString = $(value).val();
            var dateString = $(value).parent().parent().find('.datepicker-wrapper input').val();
            if (cfString && dateString) {
                var cf = parseInt(cfString, 10);
                var date = new Date(dateString);
                if (cf >= 0)
                    data.push([date.getTime(), 0, cf]);
                else
                    data.push([date.getTime(), cf, 0]);
            }
        });

        data.sort(function (a, b) {
            var aDate = a[0];
            var bDate = b[0];
            return ((aDate < bDate) ? -1 : ((aDate > bDate) ? 1 : 0));
        });

        options.series.push({
            name: "Cash Flows",
            data: data
        });

        $('#chart-container').highcharts('StockChart', options);
    }

    $(function () {
        $('#chart-container').highcharts('StockChart', {
            chart: {
                type: 'columnrange'
            },
            rangeSelector: {
                selected: 2
            },
            title: {
                text: 'Cash Flows'
            },
        });

        $('#addCf').click(function () {
            cf_index++;
            var newId = "CF_" + cf_index;
            $('.current-cf-row').append(
                '<div class="span2">' +
                '<div class="input-control text">' +
                '<input id="CF_' + cf_index + '" class="CF" type="text" placeholder="Cash Flow" />' +
                '</div>' +
                '<div class="input-control text datepicker-wrapper">' +
                '<input id="CF_Date_' + cf_index + '" class="CF_Date" type="text" placeholder="Date">' +
                '<button class="btn-date"></button>' +
                '</div>' +
                '</div>');
            if (!(cf_index % 6)) {
                $('.current-cf-row').removeClass('current-cf-row')
                    .after('<div class="row"></div><div class="row current-cf-row"></div>');
            }

            $('#CF_Date_' + cf_index).parent().datepicker({selected: updateChart, format: "yyyy-mm-dd"});
            $('#CF_' + cf_index).on('input', updateChart);
        });

        $('#CF_Date_1').parent().datepicker({selected: updateChart, format: "yyyy-mm-dd"});
        $('#CF_1').on('input', updateChart);
    });
</script>

<div class="row">
    <div class="span12">
        <h1>@(ViewBag.Title)</h1>
    </div>
</div>
<div class="row">
    <div class="span12">
        <div class="row">
            <div class="span12">
                <div id="chart-container"></div>
            </div>
        </div>
        <div class="row">
            <div class="span12">
                <hr />
                <h2>Enter Cash Flow and Time Pairs</h2>
            </div>
        </div>
        <div class="row current-cf-row">
            <div class="span2">
                <div class="input-control text">
                    <input id="CF_1" class="CF" type="text" placeholder="Cash Flow" />
                </div>
                <div class="input-control text datepicker-wrapper">
                    <input id="CF_Date_1" class="CF_Date" type="text" placeholder="Date">
                    <button class="btn-date"></button>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="span4">
                <button id="addCf" class="large success">Add CF</button>
            </div>
        </div>
    </div>
</div>
